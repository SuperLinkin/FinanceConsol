{
  "permissions": {
    "allow": [
      "Bash(npm run dev:*)",
      "Bash(git remote add:*)",
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nStandardize UI across all pages with enterprise-ready design\n\nMajor Updates:\n- Implemented consistent beige background (#f7f5f2) across all pages\n- Added dark navy headers (#101828) with white text for better contrast\n- Fixed font visibility in all forms (added text-[#101828] to inputs)\n- Standardized button styling with navy background and proper hover states\n\nNew Features:\n- Chart of Accounts page with IFRS-compliant 4-level hierarchy\n- Upload page for TB and COA with Excel validation\n- Global animations (slideRight, slideUp, slideDown)\n- Split layout design pattern (form left, active items right)\n\nPages Updated:\n- Dashboard: Professional stats cards with improved typography\n- Entity Setup: Navy table headers, right-slide modal, better form visibility\n- Settings: Enhanced form contrast, visible input text\n- Upload: TB/COA upload with validation and template downloads\n- Chart of Accounts: Full IFRS hierarchy with expandable tree view\n\nDatabase:\n- Updated chart_of_accounts schema with IFRS fields\n- Added trial_balance table with entity relationships\n- SQL migration file for Supabase setup\n\nDependencies:\n- Added xlsx package for Excel file handling\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(npm run build:*)",
      "Bash(copy page.js page_old_backup.js)",
      "mcp__ide__getDiagnostics",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd Trial Balance viewer with inline editing and class assignment features\n\nMajor Features:\n- Trial Balance viewer page with entity and period filters\n- Inline editing of GL debit/credit amounts\n- Class assignment for unmapped GLs directly in TB viewer\n- Enhanced bulk upload with upsert logic and change tracking\n- Detailed validation results showing added/updated/removed GLs\n\nTrial Balance Page Features:\n- View all uploaded trial balances with full hierarchy (Class, Sub-Class, Note, Sub-Note)\n- Filter by entity and period\n- Search by GL code or name\n- Export to CSV with all columns including net amounts\n- Real-time financial metrics: BS Check and P&L\n- Inline edit buttons to correct GL amounts\n- Assign class to unmapped GLs with dropdown selector\n\nFinancial Calculations:\n- Balance Sheet Check: Assets + Intercompany + Liability + Equity - P&L = 0\n- Profit & Loss: Revenue + Expenses\n- Automatic recalculation after edits\n- Data-driven calculations based on actual class names from COA\n\nBulk Upload Enhancements:\n- Upsert functionality: replaces existing period data instead of failing on duplicates\n- Change tracking: identifies new GLs, updated values, unchanged, and removed GLs\n- Visual change summary with color-coded cards\n- Expandable details showing old vs new values for updated records\n- Delete existing records by entity/period before inserting new data\n\nDatabase Updates:\n- Chart of Accounts entries created automatically when assigning classes to unmapped GLs\n- Trial balance records can be updated via inline editing\n- Support for enriching TB data with COA hierarchy information\n\nUI/UX Improvements:\n- Edit mode with blue-bordered input fields for debit/credit\n- Save (green checkmark) and Cancel (gray X) buttons\n- Red \"Assign Class\" button for unmapped GLs\n- Class dropdown with all available classes (Assets, Liability, Equity, Intercompany, Revenue, Income, Expenses)\n- Console logging for debugging data fetch and calculation flows\n\nBug Fixes:\n- Fixed hydration errors by wrapping console.logs in client-side checks\n- Fixed React hook dependency issues with useCallback\n- Corrected BS Check formula to subtract P&L (retained earnings is credit balance)\n- Fixed state update timing for metrics recalculation\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(node -e \"const bcrypt = require(''bcryptjs''); bcrypt.hash(''Test'', 10).then(hash => console.log(hash));\")",
      "Bash(cat:*)",
      "Bash(node -e \"console.log(require(''crypto'').randomBytes(64).toString(''hex''))\")",
      "Bash(node:*)",
      "Bash(taskkill:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(echo \"Run this SQL query in Supabase to check the current state:\n\nSELECT currency_code, is_group_reporting_currency \nFROM currencies \nORDER BY currency_code;\")",
      "Bash(vercel:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(curl:*)",
      "Bash(git revert:*)",
      "Bash(timeout:*)",
      "Bash(git log:*)",
      "WebFetch(domain:mercury.com)",
      "Bash(do echo \"File: $file\")",
      "Bash(do echo \"Processing $file\")",
      "Bash(do sed -i 's/max-w-7xl mx-auto p-6/px-8 py-6/g' \"$file\")",
      "Bash(echo:*)",
      "WebSearch",
      "Bash(tree:*)",
      "Bash(dir /S /B \"C:\\Users\\Pranav Mv\\Documents\\financial-consolidation\")",
      "WebFetch(domain:www.frankfurter.app)",
      "WebFetch(domain:frankfurter.dev)",
      "Bash(dir /S /B *.py)",
      "Bash(mkdir:*)",
      "Bash(git mv:*)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(git reset:*)",
      "Bash(dir /S /B *.js *.jsx *.ts *.tsx)",
      "Bash(psql:*)",
      "Bash(grep:*)",
      "Bash(del \"C:\\Users\\Pranav Mv\\Documents\\financial-consolidation\\remove-backticks.js\")",
      "Bash(npx eslint:*)"
    ],
    "deny": [],
    "ask": []
  }
}
